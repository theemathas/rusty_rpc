use std::io;

use crate::messages::{MethodAndArgs, ServerMessage};
use crate::ServiceCollection;

/// This trait will be automatically implemented by any user type that implement
/// the service traits generated by the `interface_file!` macro in the
/// `rusty_rpc_macro` crate. Users should not implement this trait themselves.
///
/// For some reason the Send + Sync + 'static bound is needed for `tokio::spawn`.
///
/// TODO: Does this actually work?
pub trait RustyRpcService: Send + Sync + 'static {
    #[doc(hidden)]
    fn call_method(
        &mut self,
        method_and_args: MethodAndArgs,
        connection: &mut ServiceCollection,
    ) -> io::Result<ServerMessage>;
}

/// This trait will be automatically implemented by struct types generated by
/// the `interface_file!` macro in the `rusty_rpc_macro` crate. Users should not
/// implement this trait themselves.
///
/// TODO: Does this actually work?
pub trait RustyRpcStruct {}
